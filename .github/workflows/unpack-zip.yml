name: Unpack Clean Repo

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  workflows: write
  
jobs:
  unpack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure unzip is available
        run: sudo apt-get update && sudo apt-get install -y unzip

      - name: Find ZIP to unpack
        id: findzip
        shell: bash
        run: |
          set -euo pipefail
          if [[ -f "Cost-tool-pages-clean.zip" ]]; then
            echo "zipfile=Cost-tool-pages-clean.zip" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          zips=$(ls -1 *.zip 2>/dev/null || true)
          if [[ -n "$zips" ]]; then
            first=$(echo "$zips" | head -n1)
            echo "zipfile=$first" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          echo "No ZIP found in repo root" >&2
          exit 1

      - name: Rebase onto latest main
        shell: bash
        run: |
          set -euo pipefail
          git fetch origin main
          git checkout main
          git rebase origin/main || { git rebase --abort; }
          git status

      - name: Unpack ZIP
        shell: bash
        run: |
          set -euo pipefail
          echo "Unzipping: ${{ steps.findzip.outputs.zipfile }}"
          unzip -o "${{ steps.findzip.outputs.zipfile }}" -d .
          rm -f "${{ steps.findzip.outputs.zipfile }}"

      - name: Commit and push (with fallback branch)
        id: push
        shell: bash
        env:
          REPO: ${{ github.repository }}
        run: |
          set -euo pipefail
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "chore: unpack clean repo"

            # Try to push directly to main
            if git push origin HEAD:main; then
              echo "pushed_to=main" >> "$GITHUB_OUTPUT"
              echo "✅ Pushed directly to main" >> "$GITHUB_STEP_SUMMARY"
              exit 0
            fi

            # Fallback: push to a unique branch and provide merge link
            BR="auto/unpack-$(date +%Y%m%d-%H%M%S)"
            git push -u origin HEAD:"$BR"
            echo "pushed_to=$BR" >> "$GITHUB_OUTPUT"
            COMPARE_URL="https://github.com/${REPO}/compare/main...${BR}?expand=1"
            echo "⚠️ main had nieuwe commits; changes zijn gepusht naar **${BR}**." >> "$GITHUB_STEP_SUMMARY"
            echo "" >> "$GITHUB_STEP_SUMMARY"
            echo "👉 Merge-link: ${COMPARE_URL}" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "Nothing to commit"
            echo "pushed_to=none" >> "$GITHUB_OUTPUT"
          fi
